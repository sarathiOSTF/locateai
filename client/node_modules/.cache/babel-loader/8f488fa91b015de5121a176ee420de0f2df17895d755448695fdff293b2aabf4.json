{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\107654\\\\Documents\\\\locateai\\\\client\\\\src\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ChatWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatWindow() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!inputMessage.trim()) return;\n    const userMessage = {\n      text: inputMessage,\n      isUser: true\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setInputMessage('');\n    try {\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: inputMessage\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      const botMessage = {\n        text: data.reply,\n        isUser: false,\n        screenshotUrl: data.screenshotUrl,\n        mapUrl: data.mapUrl\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n      const errorMessage = {\n        text: 'Sorry, an error occurred. Please try again.',\n        isUser: false\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    }\n  };\n  const handleCopy = text => {\n    navigator.clipboard.writeText(text);\n  };\n  const handleOpenMap = url => {\n    window.open(url, '_blank');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.isUser ? 'user-message' : 'bot-message'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCopy(message.text),\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), message.screenshotUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: message.screenshotUrl,\n            alt: \"Map Screenshot\",\n            className: \"map-screenshot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleOpenMap(message.mapUrl),\n            children: \"Open in Google Maps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"chat-input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputMessage,\n        onChange: e => setInputMessage(e.target.value),\n        placeholder: \"Ask LocateAI about any USA address...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"EsKTm9PYySfYQYLkuLRorTz0Yzg=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatWindow","_s","messages","setMessages","inputMessage","setInputMessage","handleSubmit","e","preventDefault","trim","userMessage","text","isUser","prevMessages","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","data","json","botMessage","reply","screenshotUrl","mapUrl","error","console","errorMessage","handleCopy","navigator","clipboard","writeText","handleOpenMap","url","window","open","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/107654/Documents/locateai/client/src/ChatWindow.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ChatWindow.css';\r\n\r\nfunction ChatWindow() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!inputMessage.trim()) return;\r\n\r\n    const userMessage = { text: inputMessage, isUser: true };\r\n    setMessages(prevMessages => [...prevMessages, userMessage]);\r\n    setInputMessage('');\r\n\r\n    try {\r\n      const response = await fetch('/api/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ message: inputMessage }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      const data = await response.json();\r\n      const botMessage = { \r\n        text: data.reply, \r\n        isUser: false, \r\n        screenshotUrl: data.screenshotUrl,\r\n        mapUrl: data.mapUrl\r\n      };\r\n      setMessages(prevMessages => [...prevMessages, botMessage]);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      const errorMessage = { text: 'Sorry, an error occurred. Please try again.', isUser: false };\r\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\r\n    }\r\n  };\r\n\r\n  const handleCopy = (text) => {\r\n    navigator.clipboard.writeText(text);\r\n  };\r\n\r\n  const handleOpenMap = (url) => {\r\n    window.open(url, '_blank');\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-window\">\r\n      <div className=\"chat-messages\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className={`message ${message.isUser ? 'user-message' : 'bot-message'}`}>\r\n            <p>{message.text}</p>\r\n            <button onClick={() => handleCopy(message.text)}>Copy</button>\r\n            {message.screenshotUrl && (\r\n              <div>\r\n                <img src={message.screenshotUrl} alt=\"Map Screenshot\" className=\"map-screenshot\" />\r\n                <button onClick={() => handleOpenMap(message.mapUrl)}>Open in Google Maps</button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={handleSubmit} className=\"chat-input-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={inputMessage}\r\n          onChange={(e) => setInputMessage(e.target.value)}\r\n          placeholder=\"Ask LocateAI about any USA address...\"\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatWindow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}